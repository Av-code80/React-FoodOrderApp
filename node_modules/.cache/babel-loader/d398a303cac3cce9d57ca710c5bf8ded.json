{"ast":null,"code":"var _jsxFileName = \"/Users/avehghasemian/Desktop/FoodOrderApp/React-FoodOrderApp/src/components/Layout/HeaderCartButton.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from 'react'; //47) add useContxte here and use it in header cart button, need to\n//import cartContext here\n\nimport CartIcon from '../Cart/CartIcon';\nimport cartContext from '../../store/cart-context';\nimport classes from './HeaderCartButton.module.css';\nimport CartContext from '../../store/cart-context'; //6) add CartIcon in first span- => 7) to availableMeals\n//36)to handle button set props.ocClick then pass to App.js for 37) for onClose\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HeaderCartButton = props => {\n  _s();\n\n  //48*) call useContext & pass this cart contxte to it\n  const cartCtx = useContext(CartContext); //49**) so can use this to output our number of cart items length\n  //and use reduce() that let us to transform an array of data into a single value\n\n  const numberOfCartItem = cartCtx.items.length.reduce((curNumber, item) => {}, 0);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: classes.button,\n    onClick: props.onClick,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: classes.icon,\n      children: /*#__PURE__*/_jsxDEV(CartIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Your Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: classes.badge,\n      children: \"3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }, this);\n};\n\n_s(HeaderCartButton, \"5vyuBAd9ctzs1tCKQUMcCu/LGtk=\");\n\n_c = HeaderCartButton;\nexport default HeaderCartButton; //in this component having an icon, some text, a little badge\n//with current number of items in cart, so need 3 span\n//*to get access to this cartContext which is managed in App.js by\n//cartProvider-- by using useContext here the headerCartbutton ll be reevaluted\n//by React whenever context changes, when cartProvider is updated befor\n//** for that it takes 2 arguments: 1. is a function 2. starting value\n//here using 0. First argument which is a function takes 2 arguments itself\n//curNumber is different for every item that calling it and it's \n//a number of value during execution, \n\nvar _c;\n\n$RefreshReg$(_c, \"HeaderCartButton\");","map":{"version":3,"sources":["/Users/avehghasemian/Desktop/FoodOrderApp/React-FoodOrderApp/src/components/Layout/HeaderCartButton.js"],"names":["useContext","CartIcon","cartContext","classes","CartContext","HeaderCartButton","props","cartCtx","numberOfCartItem","items","length","reduce","curNumber","item","button","onClick","icon","badge"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B,C,CACA;AACA;;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,WAAP,MAAyB,0BAAzB;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAOC,WAAP,MAAwB,0BAAxB,C,CAGA;AACA;;;;AACA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAAA;;AACpC;AAEA,QAAMC,OAAO,GAAGP,UAAU,CAACI,WAAD,CAA1B,CAHoC,CAIpC;AACA;;AACI,QAAMI,gBAAgB,GAAGD,OAAO,CAACE,KAAR,CAAcC,MAAd,CAAqBC,MAArB,CACxB,CAACC,SAAD,EAAYC,IAAZ,KAAqB,CAAE,CADC,EACC,CADD,CAAzB;AAGA,sBACE;AAAQ,IAAA,SAAS,EAAEV,OAAO,CAACW,MAA3B;AAAmC,IAAA,OAAO,EAAER,KAAK,CAACS,OAAlD;AAAA,4BACE;AAAM,MAAA,SAAS,EAAEZ,OAAO,CAACa,IAAzB;AAAA,6BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAM,MAAA,SAAS,EAAEb,OAAO,CAACc,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAlBH;;GAAMZ,gB;;KAAAA,gB;AAoBJ,eAAeA,gBAAf,C,CAEF;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["import { useContext } from 'react';\n//47) add useContxte here and use it in header cart button, need to\n//import cartContext here\nimport CartIcon from '../Cart/CartIcon';\nimport cartContext from  '../../store/cart-context';\nimport classes from './HeaderCartButton.module.css';\nimport CartContext from '../../store/cart-context';\n\n\n//6) add CartIcon in first span- => 7) to availableMeals\n//36)to handle button set props.ocClick then pass to App.js for 37) for onClose\nconst HeaderCartButton = (props) => {\n//48*) call useContext & pass this cart contxte to it\n\nconst cartCtx = useContext(CartContext);\n//49**) so can use this to output our number of cart items length\n//and use reduce() that let us to transform an array of data into a single value\n    const numberOfCartItem = cartCtx.items.length.reduce\n    ((curNumber, item) => {}, 0);\n\n    return (\n      <button className={classes.button} onClick={props.onClick}>\n        <span className={classes.icon}>\n          <CartIcon />\n        </span>\n        <span>Your Cart</span>\n        <span className={classes.badge}>3</span>\n      </button>\n    );\n  };\n  \n  export default HeaderCartButton;\n\n//in this component having an icon, some text, a little badge\n//with current number of items in cart, so need 3 span\n\n//*to get access to this cartContext which is managed in App.js by\n//cartProvider-- by using useContext here the headerCartbutton ll be reevaluted\n//by React whenever context changes, when cartProvider is updated befor\n\n//** for that it takes 2 arguments: 1. is a function 2. starting value\n//here using 0. First argument which is a function takes 2 arguments itself\n//curNumber is different for every item that calling it and it's \n//a number of value during execution, "]},"metadata":{},"sourceType":"module"}