{"ast":null,"code":"var _jsxFileName = \"/Users/avehghasemian/Desktop/FoodOrderApp/React-FoodOrderApp/src/components/Meals/MealItem/MealItemForm.js\",\n    _s = $RefreshSig$();\n\nimport { useRef } from 'react';\nimport Input from '../../UI/Input';\nimport classes from './MealItemForm.module.css'; //17)make input wich is built in Input.js\n//21*)replacing <input> by <Input>, then add label prop built in Input.js\n//then add input that it's value is an object{{}} and init we have id etc.\n//this props content are attributed autpmatcily to {...props.input} in Input.js => 22) to Cart.js\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MealItemForm = props => {\n  _s();\n\n  //63) useRef()\n  const amountInputRef = useRef(); //60)for sending event automatically by calling func, preventDefault\n  //then extract entered amount create ref\n\n  const submitHandler = event => {\n    event.preventDefault(event); //67)let read entered value in submitHandler then convert value string to number\n\n    const enteredAmount = amountInput.current.value; //value is always string\n\n    const enteredAmountNumber = +enteredAmount; //convert etring to number\n  }; //61)point submitHandler -- 62)create & assign ref prop to element<Input>\n\n\n  return (\n    /*#__PURE__*/\n    //63) point amountInputRef down => 64 to where we wana receive ref\n    // to Input.js\n    _jsxDEV(\"form\", {\n      className: classes.form,\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        ref: amountInputRef,\n        label: \"Amount\",\n        input: {\n          id: 'amount_' + props.id,\n          type: 'number',\n          min: '0',\n          max: '5',\n          step: '1',\n          defaultValue: '1'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"+ Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(MealItemForm, \"7cHUJdJWd3tefBlPVbYdC5gY/1U=\");\n\n_c = MealItemForm;\nexport default MealItemForm; //* type in input is built-in element\n//min: '1' & max: '5' are validation props which are all props can add by \n//defaullt to input element to ensure amount can be added\n//DefaultValue: '1', this is initial value. \n//this content by all it's props can add to any input element\n//With the current implementation of MealItemForm, \n//every MealItem <Input /> receives the same id, as I do the\n//**60)for ensuring that addItemToCartHandler is called for that need to go place \n//wanna call context object in MealItemForm.js\n\nvar _c;\n\n$RefreshReg$(_c, \"MealItemForm\");","map":{"version":3,"sources":["/Users/avehghasemian/Desktop/FoodOrderApp/React-FoodOrderApp/src/components/Meals/MealItem/MealItemForm.js"],"names":["useRef","Input","classes","MealItemForm","props","amountInputRef","submitHandler","event","preventDefault","enteredAmount","amountInput","current","value","enteredAmountNumber","form","id","type","min","max","step","defaultValue"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,OAAP,MAAoB,2BAApB,C,CAEA;AACA;AACA;AACA;;;;AACA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAAA;;AAC9B;AACA,QAAMC,cAAc,GAAGL,MAAM,EAA7B,CAF8B,CAG9B;AACA;;AACA,QAAOM,aAAa,GAAEC,KAAK,IAAG;AAC1BA,IAAAA,KAAK,CAACC,cAAN,CAAqBD,KAArB,EAD0B,CAE9B;;AACI,UAAME,aAAa,GAAGC,WAAW,CAACC,OAAZ,CAAoBC,KAA1C,CAH0B,CAGuB;;AACjD,UAAMC,mBAAmB,GAAG,CAACJ,aAA7B,CAJ0B,CAIsB;AACnD,GALD,CAL8B,CAW9B;;;AACI;AAAA;AAAQ;AACA;AACR;AAAM,MAAA,SAAS,EAAEP,OAAO,CAACY,IAAzB;AAA+B,MAAA,QAAQ,EAAER,aAAzC;AAAA,8BACI,QAAC,KAAD;AACI,QAAA,GAAG,EAAED,cADT;AAEI,QAAA,KAAK,EAAC,QAFV;AAGI,QAAA,KAAK,EAAE;AACPU,UAAAA,EAAE,EAAE,YAAYX,KAAK,CAACW,EADf;AAEPC,UAAAA,IAAI,EAAE,QAFC;AAGPC,UAAAA,GAAG,EAAE,GAHE;AAIPC,UAAAA,GAAG,EAAE,GAJE;AAKPC,UAAAA,IAAI,EAAE,GALC;AAMPC,UAAAA,YAAY,EAAE;AANP;AAHX;AAAA;AAAA;AAAA;AAAA,cADJ,eAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAiBH,CA7BD;;GAAMjB,Y;;KAAAA,Y;AA+BN,eAAeA,YAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA","sourcesContent":["import { useRef } from 'react';\nimport Input from '../../UI/Input';\nimport classes from './MealItemForm.module.css';\n\n//17)make input wich is built in Input.js\n//21*)replacing <input> by <Input>, then add label prop built in Input.js\n//then add input that it's value is an object{{}} and init we have id etc.\n//this props content are attributed autpmatcily to {...props.input} in Input.js => 22) to Cart.js\nconst MealItemForm = props => {\n//63) useRef()\nconst amountInputRef = useRef();\n//60)for sending event automatically by calling func, preventDefault\n//then extract entered amount create ref\nconst  submitHandler =event =>{\n    event.preventDefault(event);\n//67)let read entered value in submitHandler then convert value string to number\n    const enteredAmount = amountInput.current.value; //value is always string\n    const enteredAmountNumber = +enteredAmount;     //convert etring to number\n};\n//61)point submitHandler -- 62)create & assign ref prop to element<Input>\n    return (//63) point amountInputRef down => 64 to where we wana receive ref\n            // to Input.js\n    <form className={classes.form} onSubmit={submitHandler}>\n        <Input \n            ref={amountInputRef}\n            label=\"Amount\" \n            input={{\n            id: 'amount_' + props.id,\n            type: 'number',\n            min: '0',\n            max: '5',\n            step: '1',\n            defaultValue: '1',\n        }} />\n        <button>+ Add</button>\n    </form>     \n    );\n};\n\nexport default MealItemForm;\n\n//* type in input is built-in element\n//min: '1' & max: '5' are validation props which are all props can add by \n//defaullt to input element to ensure amount can be added\n//DefaultValue: '1', this is initial value. \n//this content by all it's props can add to any input element\n//With the current implementation of MealItemForm, \n//every MealItem <Input /> receives the same id, as I do the\n\n//**60)for ensuring that addItemToCartHandler is called for that need to go place \n//wanna call context object in MealItemForm.js"]},"metadata":{},"sourceType":"module"}