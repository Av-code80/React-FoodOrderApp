{"ast":null,"code":"var _jsxFileName = \"/Users/avehghasemian/Desktop/FoodOrderApp/React-FoodOrderApp/src/components/UI/Modal.js\";\nimport { Fragment } from 'react';\nimport ReactDOM from 'react-dom';\nimport classes from './Modal.module.css'; //39)add onClick prop to backdrop div for modal\n//24*) make backdrop & modalOverlay components ,\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Backdrop = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.backdrop,\n    onClick: props.ocClose\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 12\n  }, this);\n}; //25**)inseid of 2div put props.children\n\n\n_c = Backdrop;\n\nconst ModalOverlay = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.modal,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.content,\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}; //as there are 2 portals here,it needs to creat a helper const\n\n\n_c2 = ModalOverlay;\nconst portalElement = document.getElementById('overlays'); //26***) need also to return markup, make Fragmenet then output 2 dynamic portal expression\n//27)need also to know where to portal: id=\"overlays\" is in HTML file \n//portalElement is as second argument to both created portal calls. => 28) to Cart.js\n\nconst Modal = props => {\n  //40) set down onClose props on Backdrop =\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(Backdrop, {\n      onClose: props.onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 28\n    }, this), portalElement), /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(ModalOverlay, {\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), portalElement)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = Modal;\nexport default Modal; //* special markup, use React portal for backdrop, behind modal overlay\n//and want to render modal overlay itself by React Portal to use that \n//component wherever i want, \n//to render portal, need to go to html file in return from html,\n// can create backdrop & overlay then use Portal. create 2 seperate components\n//for that. Both recieave prop bcz both recieve data\n//** at the end props.children ll be actual content passed between \n// opening and closing tags by a component where modal is getting used.\n//*** 2 expersions call the create Portal method which is bult into React\n//in theses experssions. not the React library itself, but React DOM library, by React team\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Backdrop\");\n$RefreshReg$(_c2, \"ModalOverlay\");\n$RefreshReg$(_c3, \"Modal\");","map":{"version":3,"sources":["/Users/avehghasemian/Desktop/FoodOrderApp/React-FoodOrderApp/src/components/UI/Modal.js"],"names":["Fragment","ReactDOM","classes","Backdrop","props","backdrop","ocClose","ModalOverlay","modal","content","children","portalElement","document","getElementById","Modal","createPortal","onClose"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAOC,OAAP,MAAoB,oBAApB,C,CACA;AACA;;;;AACA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AACxB,sBAAO;AAAK,IAAA,SAAS,EAAEF,OAAO,CAACG,QAAxB;AAAkC,IAAA,OAAO,EAAED,KAAK,CAACE;AAAjD;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAFD,C,CAGA;;;KAHMH,Q;;AAIN,MAAMI,YAAY,GAAIH,KAAD,IAAW;AAC5B,sBACA;AAAK,IAAA,SAAS,EAAEF,OAAO,CAACM,KAAxB;AAAA,2BACI;AAAK,MAAA,SAAS,EAAEN,OAAO,CAACO,OAAxB;AAAA,gBAAkCL,KAAK,CAACM;AAAxC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADA;AAKH,CAND,C,CAOA;;;MAPMH,Y;AASN,MAAMI,aAAa,GAAGC,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAAtB,C,CAEA;AACA;AACA;;AACA,MAAMC,KAAK,GAAGV,KAAK,IAAI;AAAE;AACrB,sBACA,QAAC,QAAD;AAAA,4BACCH,QAAQ,CAACc,YAAT,eAAsB,QAAC,QAAD;AAAU,MAAA,OAAO,EAAEX,KAAK,CAACY;AAAzB;AAAA;AAAA;AAAA;AAAA,YAAtB,EAA4DL,aAA5D,CADD,eAECV,QAAQ,CAACc,YAAT,eACC,QAAC,YAAD;AAAA,gBAAeX,KAAK,CAACM;AAArB;AAAA;AAAA;AAAA;AAAA,YADD,EAECC,aAFD,CAFD;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AASH,CAVD;;MAAMG,K;AAYN,eAAeA,KAAf,C,CAKA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA","sourcesContent":["import { Fragment } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport classes from './Modal.module.css';\n//39)add onClick prop to backdrop div for modal\n//24*) make backdrop & modalOverlay components ,\nconst Backdrop = (props) => {\n    return <div className={classes.backdrop} onClick={props.ocClose} />;\n};\n//25**)inseid of 2div put props.children\nconst ModalOverlay = (props) => {\n    return (\n    <div className={classes.modal}>\n        <div className={classes.content}>{props.children}</div>\n     </div>\n   );\n};         \n//as there are 2 portals here,it needs to creat a helper const\n\nconst portalElement = document.getElementById('overlays');\n\n//26***) need also to return markup, make Fragmenet then output 2 dynamic portal expression\n//27)need also to know where to portal: id=\"overlays\" is in HTML file \n//portalElement is as second argument to both created portal calls. => 28) to Cart.js\nconst Modal = props => { //40) set down onClose props on Backdrop =\n    return (\n    <Fragment> \n    {ReactDOM.createPortal(<Backdrop onClose={props.onClose} />, portalElement)}\n    {ReactDOM.createPortal(\n      <ModalOverlay>{props.children}</ModalOverlay>,\n      portalElement\n    )}\n  </Fragment>\n);\n};\n\nexport default Modal;\n\n\n\n\n//* special markup, use React portal for backdrop, behind modal overlay\n//and want to render modal overlay itself by React Portal to use that \n//component wherever i want, \n//to render portal, need to go to html file in return from html,\n// can create backdrop & overlay then use Portal. create 2 seperate components\n//for that. Both recieave prop bcz both recieve data\n\n//** at the end props.children ll be actual content passed between \n// opening and closing tags by a component where modal is getting used.\n\n//*** 2 expersions call the create Portal method which is bult into React\n//in theses experssions. not the React library itself, but React DOM library, by React team"]},"metadata":{},"sourceType":"module"}