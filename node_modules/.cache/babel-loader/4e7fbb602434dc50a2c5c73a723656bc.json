{"ast":null,"code":"var _jsxFileName = \"/Users/avehghasemian/Desktop/FoodOrderApp/React-FoodOrderApp/src/components/Cart/Cart.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from 'react'; //81) import useContext \n\nimport Modal from '../UI/Modal';\nimport CartItem from './CartItem';\nimport classes from './Cart.module.css';\nimport CartContext from '../../store/cart-context'; //22)make  a div ll be modal component, total amount, 2 actions buttons\n//23*)for cartitem make const as example to map all cartitem to cartitem JSX => 24 to Modal.js\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  //82)\n  const cartCtx = useContext(CartContext); //84) totalAmount\n\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`; //86b)for that, make const\n\n  const hasItems = cartCtx.items.length > 0; //89) for adding & removing item from cart => 90) go CartItem\n\n  const cartItemRemoveHandler = id => {\n    cartCtx.removeItem(id);\n  }; //95)need to reach to our carCtx & call addItem there & it trigger addItem func\n\n\n  const cartItemAddHandler = item => {\n    cartCtx.addItem({ ...item,\n      amount: 1\n    });\n  };\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes['cart-items'],\n    children: cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      amount: item.amount,\n      price: item.price,\n      onRemove: cartItemRemoveHandler.bind(null, item.id),\n      onAdd: cartItemAddHandler.bind(null, item) //{}it trigger when plus button in cart is clicked\n\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, this) //bind pre-configur as func for futur execution and let pre-confifure argument\n    //that function receive when is executed. both add & remove func need \n    //tobe sure recieve ID or item respectivly.\n    )\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this); //28)replace div by <modal> and output the card into =>29) App.js \n\n\n  return (\n    /*#__PURE__*/\n    //85) point totalAmount in span--\n    _jsxDEV(Modal, {\n      onClose: props.onClose,\n      children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.total,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Total Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: totalAmount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes['button--alt'],\n          onClick: props.onClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this), hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.button,\n          children: \"Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this) //87){hastItems && }\n\n  ); //86a) want to be sure that in order button is only \n  //showing up if we have items in cart \n}; //38) to make onClick={props.onClose} =>39 go to\n\n\n_s(Cart, \"5vyuBAd9ctzs1tCKQUMcCu/LGtk=\");\n\n_c = Cart;\nexport default Cart; //cart.js must render all cart itemes, display total amount, gives us\n//button for leaving & ordering\n//* first a cartItem const with it's content then map them\n//Cart mus not be inside a div but inside a modal\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/Users/avehghasemian/Desktop/FoodOrderApp/React-FoodOrderApp/src/components/Cart/Cart.js"],"names":["useContext","Modal","CartItem","classes","CartContext","Cart","props","cartCtx","totalAmount","toFixed","hasItems","items","length","cartItemRemoveHandler","id","removeItem","cartItemAddHandler","item","addItem","amount","cartItems","map","name","price","bind","onClose","total","actions","button"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B,C,CACA;;AAEA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,WAAP,MAAwB,0BAAxB,C,CAGA;AACA;;;;AACA,MAAOC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACzB;AACA,QAAMC,OAAO,GAAGP,UAAU,CAACI,WAAD,CAA1B,CAFyB,CAGzB;;AACE,QAAMI,WAAW,GAAI,IAAGD,OAAO,CAACC,WAAR,CAAoBC,OAApB,CAA4B,CAA5B,CAA+B,EAAvD,CAJuB,CAMzB;;AACE,QAAMC,QAAQ,GAAGH,OAAO,CAACI,KAAR,CAAcC,MAAd,GAAuB,CAAxC,CAPuB,CASzB;;AACA,QAAMC,qBAAqB,GAAIC,EAAD,IAAQ;AACpCP,IAAAA,OAAO,CAACQ,UAAR,CAAmBD,EAAnB;AACD,GAFD,CAVyB,CAczB;;;AACA,QAAME,kBAAkB,GAAIC,IAAD,IAAU;AACnCV,IAAAA,OAAO,CAACW,OAAR,CAAgB,EAAC,GAAGD,IAAJ;AAAUE,MAAAA,MAAM,EAAE;AAAlB,KAAhB;AACD,GAFD;;AAII,QAAMC,SAAS,gBACf;AAAI,IAAA,SAAS,EAAEjB,OAAO,CAAC,YAAD,CAAtB;AAAA,cAGKI,OAAO,CAACI,KAAR,CAAcU,GAAd,CAAmBJ,IAAD,iBACjB,QAAC,QAAD;AAEA,MAAA,IAAI,EAAEA,IAAI,CAACK,IAFX;AAGA,MAAA,MAAM,EAAEL,IAAI,CAACE,MAHb;AAIA,MAAA,KAAK,EAAEF,IAAI,CAACM,KAJZ;AAKA,MAAA,QAAQ,EAAEV,qBAAqB,CAACW,IAAtB,CAA2B,IAA3B,EAAiCP,IAAI,CAACH,EAAtC,CALV;AAMA,MAAA,KAAK,EAAEE,kBAAkB,CAACQ,IAAnB,CAAwB,IAAxB,EAA8BP,IAA9B,CANP,CAM4C;;AAN5C,OACKA,IAAI,CAACH,EADV;AAAA;AAAA;AAAA;AAAA,YADiB,CAQjB;AACF;AACA;AAVC;AAHL;AAAA;AAAA;AAAA;AAAA,UADA,CAnBqB,CAsCzB;;;AACA;AAAA;AAAQ;AACJ,YAAC,KAAD;AAAO,MAAA,OAAO,EAAER,KAAK,CAACmB,OAAtB;AAAA,iBACGL,SADH,eAEE;AAAK,QAAA,SAAS,EAAEjB,OAAO,CAACuB,KAAxB;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAOlB;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAME;AAAK,QAAA,SAAS,EAAEL,OAAO,CAACwB,OAAxB;AAAA,gCACE;AAAQ,UAAA,SAAS,EAAExB,OAAO,CAAC,aAAD,CAA1B;AAA2C,UAAA,OAAO,EAAEG,KAAK,CAACmB,OAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAIGf,QAAQ,iBAAI;AAAQ,UAAA,SAAS,EAAEP,OAAO,CAACyB,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJf;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CAcI;;AAdJ,IAvCyB,CAsDrB;AACF;AACD,CAxDD,C,CAyDA;;;GAzDOvB,I;;KAAAA,I;AA2DP,eAAeA,IAAf,C,CAGA;AACA;AACA;AACA","sourcesContent":["import { useContext } from 'react';\n//81) import useContext \n\nimport Modal from '../UI/Modal';\nimport CartItem from './CartItem';\nimport classes from './Cart.module.css';\nimport CartContext from '../../store/cart-context';\n\n\n//22)make  a div ll be modal component, total amount, 2 actions buttons\n//23*)for cartitem make const as example to map all cartitem to cartitem JSX => 24 to Modal.js\nconst  Cart = (props) => { \n//82)\nconst cartCtx = useContext(CartContext);\n//84) totalAmount\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n\n//86b)for that, make const\n  const hasItems = cartCtx.items.length > 0;\n\n//89) for adding & removing item from cart => 90) go CartItem\nconst cartItemRemoveHandler = (id) => {\n  cartCtx.removeItem(id);\n};\n\n//95)need to reach to our carCtx & call addItem there & it trigger addItem func\nconst cartItemAddHandler = (item) => {\n  cartCtx.addItem({...item, amount: 1});\n};\n\n    const cartItems = (\n    <ul className={classes['cart-items']}>\n      {/* {[{id: 'c1', name: 'Sushi',amount: 2, price: 12.99}-- 83 don't need it.\n        //88) add CartItem here */}\n        {cartCtx.items.map((item) => (\n          <CartItem\n          key={item.id}\n          name={item.name}\n          amount={item.amount}\n          price={item.price}\n          onRemove={cartItemRemoveHandler.bind(null, item.id)}\n          onAdd={cartItemAddHandler.bind(null, item)} //{}it trigger when plus button in cart is clicked\n        />//bind pre-configur as func for futur execution and let pre-confifure argument\n        //that function receive when is executed. both add & remove func need \n        //tobe sure recieve ID or item respectivly.\n      ))}\n    </ul>\n  );\n\n//28)replace div by <modal> and output the card into =>29) App.js \nreturn (//85) point totalAmount in span--\n    <Modal onClose={props.onClose}>\n      {cartItems}\n      <div className={classes.total}>\n        <span>Total Amount</span>\n        <span>{totalAmount}</span> \n      </div>\n      <div className={classes.actions}>\n        <button className={classes['button--alt']} onClick={props.onClose}>\n          Close\n        </button>\n        {hasItems && <button className={classes.button}>Order</button>} \n      </div>\n    </Modal>\n    //87){hastItems && }\n  );//86a) want to be sure that in order button is only \n  //showing up if we have items in cart \n};\n//38) to make onClick={props.onClose} =>39 go to\n\nexport default Cart ;\n\n\n//cart.js must render all cart itemes, display total amount, gives us\n//button for leaving & ordering\n//* first a cartItem const with it's content then map them\n//Cart mus not be inside a div but inside a modal"]},"metadata":{},"sourceType":"module"}